Данный небольшой проект предоставляет возможность получить JSON при помощи Get запроса.
----------------------------------------------------------------------------
Протокол:

Request: <ip>:<port>/hello/contacts?nameFilter=val
<port> по умолчанию  - Tomcat started on port(s): 8080 (http)
<ip> localhost(127.0.0.1)
(пример запроса - http://localhost:8080/hello/contacts?nameFilter=val)

Ansver:

{"contacts":[
    {"id":1,"name":"Днепропетровск_0"},
    {"id":2,"name":"Киев_0"},
    {"id":3,"name":"Харьков_0"},
    {"id":4,"name":"Львов_0"},
    {"id":5,"name":"Донецк_0"},
    {"id":6,"name":"Луганск_0"},
    {"id":7,"name":"Суммы_0"},
    {"id":8,"name":"Тернополь_0"},
    {"id":9,"name":"Одесса_0"},
   ......
   ]
}
----------------------------------------------------------------------------
Проект запускается при помощи Spring boot. Точка входа - com.devsoft.ContactsApplication
Так-же должны быть прописаны в переменных средах - переменные JAVA_HOME, M2_HOME.
Проект можно собрать при помощи maven и на выходе в директории target получить war-файл.

СУБД - используется PostgreSQL. Настройки указываются в файле db.properties находящемся в resources.
Для удобства тестирования подключен liquibase - позволяющий создать необходимую структуру БД и наполнить
ее тестовыми данными.

При правильных настройках - запускается проект, заходим в браузер, вписываем урл в адресную строку и получаем ответ
в виде json. Json загружается по мере вытаскивания данных из БД и валидации их с регулярным выражением.

Проводилось тестирование при помощи jmeter. (пробовал на 15 threads)